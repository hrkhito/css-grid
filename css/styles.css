body {
  margin: 0;
}

/* 親要素にgridを指定する */
.container {
  display: grid;

  grid-template-columns: repeat(3,100px);
  grid-template-rows: repeat(2,100px);

  width: 400px;
  height: 300px;
  background: #eee;

  justify-content: center;
  align-content: center;

  justify-items: center;
  align-items: center;

  /* grid-template-areas:
   "r r r y y"
   "r r r y y"
   "c c g y y"
   "c c b y y"; */

  /* grid-template-columns: 100px 100px;
  grid-template-rows: 100px 100px 100px; */

  /* grid-template-columns: 100px 1fr 100px;
  grid-template-rows: 100px 100px; */

  /* grid-template-columns: 100px 2fr 1fr;
  grid-template-rows: 100px 100px; */
  
  /* grid-template-columns: repeat(4,100px); */

  /* auto-fillは親要素いっぱいに入るまでを表す */
  /* grid-template-columns: repeat(auto-fill,600px);
  grid-template-rows: 100px 150px; */

  /* 新しい列が増えるまでは余白いっぱいまで均等に幅を広げる minmax(100px, 1fr) これは列の幅を 100px から 1fr の範囲 */
  /* grid-template-columns: repeat(auto-fill,minmax(200px,1fr));
  grid-template-rows: 100px 150px; */

  /* 配置する要素がなくなったときに余白を作りたくない場合 */
  /* grid-template-columns: repeat(auto-fit,minmax(200px,1fr));
  grid-template-rows: 100px 150px; */

  /* grid-auto-rows: 100px; */

  /* gap: 20px 40px; */

  /* grid-template-columns: 100px [target-start] 100px 100px [target-end]; */
  /* grid-template-rows: 100px 100px; */

  /* grid-auto-flow: row; */
  /* grid-auto-flow: column; */
}

.container > div {
  width: 50px;
  height: 50px;
}

.box1 {
  background: hsl(0, 60%, 60%);
  justify-self: start;
  align-self: start;
  /* grid-row: 2;
  /* grid-column: 2/-1;
  grid-column: 2/4; */
  /* grid-column: 2/span 2; */
  /* grid-column: target-start / target-end;
  grid-column: target; */
  /* grid-area: r; */
}

.box2 {
  background: hsl(60, 60%, 60%);
  /* grid-area: y; */
}

.box3 {
  background: hsl(120, 60%, 60%);
  /* grid-area: g; */
}

.box4 {
  background: hsl(180, 60%, 60%);
  /* grid-area: c; */
}

.box5 {
  background: hsl(240, 60%, 60%);
  /* grid-area: b; */
}